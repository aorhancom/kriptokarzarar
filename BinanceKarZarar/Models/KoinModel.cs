// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BinanceKarZararModel;
//
//    var koinModel = KoinModel.FromJson(jsonString);

namespace BinanceKarZararModel
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class KoinModel
    {
        [JsonProperty("img")]
        public Uri Img { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("symbol")]
        public string Symbol { get; set; }

        [JsonProperty("price")]
        public string Price { get; set; }

        [JsonProperty("number")]
        public string Number { get; set; }

        [JsonProperty("avg_buy_price")]
        public string AvgBuyPrice { get; set; }
    }

    public partial class KoinModel
    {
        public static KoinModel[] FromJson(string json) => JsonConvert.DeserializeObject<KoinModel[]>(json, BinanceKarZararModel.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this KoinModel[] self) => JsonConvert.SerializeObject(self, BinanceKarZararModel.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}